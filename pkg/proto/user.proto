syntax = "proto3";

package pb;

option go_package = "./";

import "google/protobuf/timestamp.proto";

service UserService{
    rpc UserSignup(Signup) returns(Response);
    rpc VerifyUser(OTP) returns(Response);
    rpc UserLogin(Login) returns(Response);

    rpc ViewProfile(ID) returns (Profile); 
    rpc EditProfile(Profile) returns(Profile);
    rpc ChangePassword(Password) returns(Response);
    rpc BlockUser(ID) returns(Response);
    rpc UnBlockUser(ID) returns(Response);
    rpc GetAllUsers(UserNoParam) returns(UserList);

    rpc UserGetAllProblems(UserNoParam) returns(UserProblemList);
    rpc UserGetProblemWithTestCases(UserProblemId) returns(UserTestcaseResponse);

    rpc SubmitCode(UserSubmissionRequest) returns(UserSubmissionResponse);
    rpc GetUserStats(ID) returns(UserStatsResponse);

    rpc AddSubscriptionPlan(USubscription) returns(Response);
    rpc GetAllPlans(UserNoParam) returns(UPlanList);
    rpc UpdatePlan(USubscription) returns(USubscription);

    rpc GenerateInvoice(InvoiceRequest) returns (Response);
    rpc GetUserInvoices(ID) returns (InvoiceList);
    rpc MakePayment(PaymentRequest) returns(PaymentResponse);
    rpc PaymentSuccess(ConfirmRequest) returns(ConfirmResponse);

    rpc GetUserProfileStats (UserStatsRequest) returns (UserStatsProfileResponse);
    rpc GetSubscriptionStats (SubscriptionStatsRequest) returns (SubscriptionStatsResponse);
    rpc UserGetProblemStats (UProblemStatsRequest) returns (UProblemStatsResponse);
    rpc UserGetLeaderboardStats(ULeaderboardRequest) returns (ULeaderboardResponse);
}

message ULeaderboardRequest {}

message ULeaderboardEntry {
    string user_id = 1;
    int32 solved_count = 2;
    int32 rank = 3;
}

message ULeaderboardResponse {
    repeated ULeaderboardEntry leaderboard = 1;
}

message UProblemStatsRequest {}

message UProblemStatsResponse {
    int32 total_problems = 1;
    int32 easy_problems = 2;
    int32 medium_problems = 3;
    int32 hard_problems = 4;
    map<string, int32> type_problem_count = 5;
    int32 premium_problems = 6;
    int32 non_premium_problems = 7;
}

message SubscriptionStatsRequest {}

message SubscriptionStatsResponse {
    int32 basic_plan_subscribers = 1;
    int32 standard_plan_subscribers = 2;
    int32 premium_plan_subscribers = 3;
    uint32 total_amount_collected_lifetime = 4;
    uint32 total_amount_collected_weekly = 5;
    uint32 total_amount_collected_monthly = 6;
    uint32 total_amount_collected_yearly = 7;
}

message UserStatsRequest {}

message UserStatsProfileResponse {
    int32 total_users = 1;
    int32 active_users = 2;
    int32 blocked_users = 3;
    int32 prime_users = 4;
    int32 non_prime_users = 5;
}

message ConfirmResponse{
    string Status = 1;
    string Invoice_ID = 2;
}

message ConfirmRequest{
    string User_ID = 1;
    string Invoice_ID = 2;
    string Payment_ID = 3;
    string Order_ID = 4;
    string Plan = 5;
    string Amount = 6;
    string Signature = 7;
}

message PaymentResponse {
    string User_ID = 1;
    uint32 Invoice_ID = 2;
    string Plan = 3;
    uint32 Amount = 4;
    string Order_ID = 5;
}

message PaymentRequest{
    string User_id =1;
    uint32 Invoice_id = 2;
}

message InvoiceRequest {
    string user_id = 1;
    string user_email = 2;
    uint32 subsription_id = 3;
}

message InvoiceList {
    repeated Invoice invoices = 1;
}

message Invoice {
    uint32 id = 1;
    string user_id = 2;
    string plan = 3;
    float amount = 4;
    string payment_status = 5;
}

message UPlanList {
    repeated USubscription plans = 1;
}

message USubscription {
    uint32 ID = 1;
    string plan = 2; 
    string duration =3;     
    double price = 4;      
    double gst = 5;        
    uint32 total_price = 6;
}

message UserStatsResponse {
    string user_id = 1;
    string user_name = 2;
    int32 total_attempts = 3;
    int32 total_successful_submissions = 4;
    int32 total_failed_submissions = 5;
    int32 easy_attempts = 6;
    int32 medium_attempts = 7;
    int32 hard_attempts = 8;
}

message UserSubmissionResponse {
    enum Status {
      OK = 0;    
      ERROR = 1; 
    }
    
    Status status = 1;             
    string message = 2;             
    int32 passed = 3;               
    int32 failed = 4;               
    string submission_id = 5;
}

message UserSubmissionRequest {
    string user_id = 1;       
    int32 problem_id = 2;    
    string code = 3;           
    string language = 4;    
}

message UserTestCase{
    string test_case_id = 1;
    string input = 2;
    string expected_output = 3;
}

message UserProblemWithTestCases {
    UserProblem problem = 1;
    repeated UserTestCase test_cases = 2;
}

message UserTestcaseResponse {
    enum Status {
        OK = 0;
        ERROR = 1;
    }

    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        UserProblemWithTestCases data = 4;
    }
}

message UserProblemId {
    int32 ID = 1;
}

message UserProblem{
    uint32 ID = 1;
    string Title = 2;
    string Discription = 3;
    string Difficulty = 4;
    string Type = 5;
    bool IsPremium = 6;
}

message UserProblemList {
    repeated UserProblem problems = 1;
}

message Signup {
    string User_Name = 1;
    string Email = 2;
    string Password = 3;
    string Phone = 4;
}

message OTP {
    string Email = 1;
    string OTP = 2;
}

message Login {
    string Email = 1;
    string Password = 2;
}

message Response {
    enum Status {
        OK = 0;
        ERROR = 1;
    }

    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        string data = 4;
    }
}

message ID {
    string ID = 1;
}

message Profile {
    string User_ID = 1;
    string User_Name = 2;
    string Email = 3; 
    string Phone = 4;
    bool is_Prime_Member = 5;
    bool Is_Blocked = 6;
    google.protobuf.Timestamp membership_Expiry_Date = 7;
}

message UserNoParam {}

message Password {
    string User_ID = 1;
    string Old_Password = 2;
    string New_Password = 3;
    string Confirm_Password = 4;
}

message UserList {
    repeated Profile users = 1;
}